[gd_scene load_steps=16 format=2]

[ext_resource path="res://pf-adamant-sans-pro/PF Adamant Sans Pro Black Italic.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://caption.png" type="Texture" id=2]
[ext_resource path="res://om.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "#############################################################################
# Copyright (C) 2021 CrowdWare
#
# This file is part of Atman.
#
#  Atman is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Atman is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Atman.  If not, see <http://www.gnu.org/licenses/>.
#
#############################################################################

extends Node2D

var count = 0.0
var startTime = 0
var seconds = 0
var phase = BEGIN

const MAX_COUNT = 30
const BEGIN = 0
const BREATHING_IN = 1
const BREATHING_OUT = 2
const HOLDING_OUT = 3
const HOLDING_IN = 4

func _ready():
	$Description.text = \"KEY_DESC\"
	$Message.text = \"KEY_TAP\"

func _process(delta):
	seconds = OS.get_unix_time() - startTime
	if phase == BREATHING_IN:
		$Count.text = str(count)
	elif phase == BREATHING_OUT:
		$Count.text = str(count)
	elif phase == HOLDING_OUT or phase == HOLDING_IN:
		var minutes = int(seconds / 60)
		if minutes > 1:
			$Count.text = str(minutes)  + \" \" + tr(\"KEY_MINUTES\") + \" - \" + str(fmod(seconds, 60)) + \" \" + tr(\"KEY_SECONDS\")
		elif minutes == 1:
			$Count.text = str(minutes)  + tr(\"KEY_MINUTE\") + \" - \" + str(fmod(seconds, 60)) + \" \" + tr(\"KEY_SECONDS\")
		else:
			$Count.text = str(seconds) + \" \" + tr(\"KEY_SECONDS\")

		if seconds > 14 and phase == HOLDING_IN:
			startBreathing()

func _on_Button_pressed():
	if phase == BEGIN:
		startBreathing()

func startBreathing():
	$StartButton.visible = false
	$StopButton.visible = true
	$Animation.visible = true
	$Description.visible = false
	$Breath.visible = true
	$Breath.text = \"KEY_OUT\"
	phase = BREATHING_OUT
	count = 0
	$AnimationPlayer.play(\"BreathOut\")
	$Message.text = \"KEY_GUIDE\"

func _on_StopButton_pressed():
	if phase == BREATHING_IN:
		$Breath.text = \"KEY_OUT\"
		phase = HOLDING_OUT
		count = 0
		startTime = OS.get_unix_time()
		$AnimationPlayer.play(\"BreathOut\")
	elif phase == BREATHING_OUT:
		holdBreath(HOLDING_OUT)
	elif phase == HOLDING_OUT:
		startTime = OS.get_unix_time()
		$Animation.visible = true
		phase = HOLDING_IN
		$Breath.text = \"KEY_IN\"
		$AnimationPlayer.play(\"BreathIn\")
		$Message.text = \"KEY_IN_AND_HOLD\"
	elif phase == HOLDING_IN:
		startBreathing()

func _on_AnimationPlayer_animation_finished(anim_name):
	if anim_name == \"BreathOut\":
		count = count + 1
		if count > MAX_COUNT or phase == HOLDING_OUT:
			holdBreath(HOLDING_OUT)
		if phase == BREATHING_OUT:
			phase = BREATHING_IN
			$Breath.text = \"KEY_IN\"
			$AnimationPlayer.play(\"BreathIn\")
	elif anim_name == \"BreathIn\":
		if phase == BREATHING_IN:
			phase = BREATHING_OUT
			$Breath.text = \"KEY_OUT\"
			$AnimationPlayer.play(\"BreathOut\")
		elif phase == HOLDING_IN:
			$Breath.text = \"KEY_HOLD\"
		
func holdBreath(mode):
	$Animation.visible = false
	$StopButton.visible = true
	$StartButton.visible = false
	startTime = OS.get_unix_time()
	seconds = 0
	$Message.text = \"KEY_OUT_AND_HOLD\"
	phase = mode
	$Breath.text = \"KEY_HOLD\"
"

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 0.847059, 0.847059, 0.847059, 1 )

[sub_resource type="StyleBoxFlat" id=9]
bg_color = Color( 0.847059, 0.847059, 0.847059, 1 )

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0.847059, 0.847059, 0.847059, 1 )

[sub_resource type="StyleBoxFlat" id=8]
bg_color = Color( 0.847059, 0.847059, 0.847059, 1 )

[sub_resource type="StyleBoxFlat" id=10]
bg_color = Color( 0.847059, 0.847059, 0.847059, 1 )

[sub_resource type="StyleBoxFlat" id=6]
bg_color = Color( 0.847059, 0.847059, 0.847059, 1 )

[sub_resource type="Animation" id=12]
resource_name = "BreathIn"
length = 1.25
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0.2, 0.2 ), Vector2( 2, 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.933333, 0.717647, 0.0666667, 0.262745 ), Color( 0.054902, 0.847059, 0.0705882, 1 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "BreathOut"
length = 1.25
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 0.2, 0.2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.054902, 0.847059, 0.0705882, 1 ), Color( 0.933333, 0.717647, 0.0666667, 0.262745 ) ]
}

[sub_resource type="DynamicFont" id=14]
size = 40
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=13]
size = 33
font_data = ExtResource( 1 )

[sub_resource type="DynamicFont" id=4]
size = 47
font_data = ExtResource( 1 )

[node name="World" type="Node2D"]
script = SubResource( 1 )

[node name="StartButton" type="Button" parent="."]
margin_right = 720.0
margin_bottom = 1400.0
custom_styles/hover = SubResource( 7 )
custom_styles/pressed = SubResource( 9 )
custom_styles/normal = SubResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StopButton" type="Button" parent="."]
visible = false
margin_right = 720.0
margin_bottom = 1400.0
custom_styles/hover = SubResource( 8 )
custom_styles/pressed = SubResource( 10 )
custom_styles/normal = SubResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Animation" type="Polygon2D" parent="."]
visible = false
position = Vector2( 360, 443 )
scale = Vector2( 2, 2 )
color = Color( 0.054902, 0.847059, 0.0705882, 1 )
polygon = PoolVector2Array( 40, -81.5, -40, -81.5, -90, -1.5, -40, 78.5, 40, 78.5, 90, -1.5 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Animation")
anims/BreathIn = SubResource( 12 )
anims/BreathOut = SubResource( 3 )

[node name="Message" type="Label" parent="."]
margin_left = 80.0
margin_top = 860.0
margin_right = 640.0
margin_bottom = 1060.0
custom_colors/font_color = Color( 0.0666667, 0.0666667, 0.0705882, 1 )
custom_fonts/font = SubResource( 14 )
text = "Tap to start"
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Description" type="Label" parent="."]
margin_left = 80.0
margin_top = 180.0
margin_right = 640.0
margin_bottom = 473.0
custom_colors/font_color = Color( 0.231373, 0.235294, 0.254902, 1 )
custom_fonts/font = SubResource( 13 )
text = "Atman is a Sanskrit word that refers to the Self or self-existent essence of human beings.
It's also similar to the German word: Atmen (breathing)

This app is based on the Wim Hof method."
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Count" type="Label" parent="."]
margin_top = 1080.0
margin_right = 720.0
margin_bottom = 1126.0
custom_colors/font_color = Color( 0.0784314, 0.137255, 0.933333, 1 )
custom_fonts/font = SubResource( 4 )
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Breath" type="Label" parent="."]
visible = false
margin_top = 420.0
margin_right = 720.0
margin_bottom = 468.0
custom_colors/font_color = Color( 0.0784314, 0.137255, 0.933333, 1 )
custom_fonts/font = SubResource( 4 )
text = "OUT"
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Caption" type="Sprite" parent="."]
position = Vector2( 360, 100 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 2 )

[node name="Om" type="Sprite" parent="."]
position = Vector2( 80, 100 )
scale = Vector2( 0.25, 0.25 )
texture = ExtResource( 3 )

[connection signal="pressed" from="StartButton" to="." method="_on_Button_pressed"]
[connection signal="pressed" from="StopButton" to="." method="_on_StopButton_pressed"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
